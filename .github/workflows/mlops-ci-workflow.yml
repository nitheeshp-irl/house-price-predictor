name: MLOps CI Workflow

on:
  push:
    branches:
      - main
  tags:
    - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.5

      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Run Data Processing
        run: python src/data/run_processing.py --input data/raw/house_data.csv --output data/processed/cleaned_house_data.csv
      
      - name: Run Feature Engineering
        run: python src/features/engineer.py --input data/processed/cleaned_house_data.csv --output data/processed/featured_house_data.csv --preprocessor models/trained/preprocessor.pkl

      - name: Start MLflow
        run: docker run -d -p 5555:5000 ghcr.io/mlflow/mlflow:latest mlflow server --host 0.0.0.0 --backend-store-uri sqlite:///mlflow.db --default-artifact-root /tmp/mlruns
      
      - name: Run Model Training
        run: python src/models/train_model.py --config configs/model_config.yaml --data data/processed/featured_house_data.csv --models-dir models --mlflow-tracking-uri http://localhost:5555
      
      - name: Cleanup MLflow
        run: |
          docker stop $(docker ps -q --filter ancestor=ghcr.io/mlflow/mlflow:latest) || true
          docker rm $(docker ps -aq --filter ancestor=ghcr.io/mlflow/mlflow:latest) || true
          docker rmi $(docker images -q ghcr.io/mlflow/mlflow:latest) || true

      - name: Set image tag from Git tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "IMAGE_TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Set image tag from commit SHA
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build backend image
        run: |
          docker build -f Dockerfile.api -t nitheesh86/mlops-backend:${IMAGE_TAG} -t nitheesh86/mlops-backend:latest .
      
      - name: Build frontend image
        run: |
          docker build -f streamlit_app/Dockerfile.streamlit -t nitheesh86/mlops-frontend:${IMAGE_TAG} -t nitheesh86/mlops-frontend:latest ./streamlit_app
      
      - name: Push backend image
        run: |
          docker push nitheesh86/mlops-backend:${IMAGE_TAG}
          docker push nitheesh86/mlops-backend:latest
      
      - name: Push frontend image
        run: |
          docker push nitheesh86/mlops-frontend:${IMAGE_TAG}